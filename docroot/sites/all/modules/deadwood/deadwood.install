<?php
// $Id: deadwood.install,v 1.10 2008/08/12 18:36:18 solotandem Exp $

/**
 * @file
 * Generate version upgrade code from 5.x to 6.x.
 *
 * Copyright 2008 by Jim Berry ("solotandem", http://drupal.org/user/240748)
 */

module_load_include('module', 'deadwood', 'deadwood');
module_load_include('inc', 'deadwood', 'deadwood');

/**
 * Implementation of hook_schema().
 */
function deadwood_schema() {
  $schema['dw_category'] = array(
    'description' => t('Stores categories for deadwood conversion items.'),
    'fields' => array(
      'nid' => array(
        'description' => t('The primary identifier for a node.'),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'vid' => array(
        'description' => t('The current {node_revisions}.vid version identifier.'),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'weight' => array(
        'description' => t('The weight of a category used for ordering.'),
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'include' => array(
        'description' => t('Include this category by default when doing conversions.'),
        'type' => 'int',
        'not null' => TRUE,
        'default' => 1,
      ),
      'code_status' => array(
        'description' => t('The availability status of conversion code for a category.'),
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'hook' => array(
        'description' => t('Name of the category conversion hook.'),
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
    ),
    'indexes' => array(
      'vid' => array('vid')
    ),
    'primary key' => array('nid')
  );

  $schema['dw_item'] = array(
    'description' => t('Stores items for deadwood conversion categories.'),
    'fields' => array(
      'nid' => array(
        'description' => t('The primary identifier for a node.'),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'vid' => array(
        'description' => t('The current {node_revisions}.vid version identifier.'),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'cid' => array(
        'description' => t('The {deadwood_category}.vid to which the conversion item is being assigned.'),
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'weight' => array(
        'description' => t('The weight of an item used for ordering.'),
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'include' => array(
        'description' => t('Include this item by default when doing conversions.'),
        'type' => 'int',
        'not null' => TRUE,
        'default' => 1,
      ),
      'code_status' => array(
        'description' => t('The availability status of conversion code for an item.'),
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'indexes' => array(
      'nid' => array('nid'),
      'vid' => array('vid')
    ),
    'primary key' => array('cid', 'vid'),
  );

  return $schema;
}

/**
 * Implementation of hook_install().
 */
function deadwood_install() {
  // Create tables.
  drupal_install_schema('deadwood');

  // Create the module input and output directories.
  $dir = file_directory_path() . '/' . DEADWOOD_IN;
  if (file_check_directory($dir, TRUE)) {
//    variable_set('deadwood_dir', DEADWOOD_IN);
  }
  $dir = file_directory_path() . '/' . DEADWOOD_OUT;
    if (file_check_directory($dir, TRUE)) {
//    variable_set('goodwood_dir', DEADWOOD_OUT);
  }

  deadwood_load_categories();
}

/**
 * Implementation of hook_uninstall().
 */
function deadwood_uninstall() {
  // Delete records.
  deadwood_unload_categories();
  // Remove tables.
  drupal_uninstall_schema('deadwood');

  // Remove the module input and output directories.
  $dir = file_directory_path() . '/' . variable_get('deadwood_dir', DEADWOOD_IN);
  deadwood_clean_directory($dir, TRUE);
  $dir = file_directory_path() . '/' . variable_get('goodwood_dir', DEADWOOD_OUT);
  deadwood_clean_directory($dir, TRUE);

  // Remove items from {variables} table.
  // TODO The other modules that add items here should also remove them.
  // These strings end in 'deadwood_category' and 'deadwood_item' (eventually).
  variable_del('deadwood_dir');
  variable_del('goodwood_dir');
}

/**
 * Load conversion categories from file into database table.
 */
function deadwood_load_categories($install = TRUE) {
  global $user;

  // Delete any existing records.
  deadwood_unload_categories();

  // Open and read parameter file.
  $handle = fopen(drupal_get_path('module', 'deadwood') . '/api_changes.csv', 'r');
  while (($data = fgetcsv($handle, 250, ',', '"')) !== FALSE) {
    $node = new stdClass();
    // Standard node fields.
    $node->type = 'deadwood_category';
    $node->language = '';
    $node->title = $data[3];
    $node->uid = $user->uid;
    $node->body = $data[3];
    // Deadwood node fields.
    $node->weight = $data[0];
    $node->include = $data[1] > DEADWOOD_CONVERSION_CODE_NOT_AVAILABLE && $data[1] < DEADWOOD_CONVERSION_CODE_NOT_NEEDED ? 1 : 0;
    $node->code_status = $data[1];
    $node->hook = $data[2];
    // Save the node.
    node_save($node);
    /*
     * The dw_category records are not inserted by node_save during install.
     *
     * Once installed and the system information is updated, node_save calls
     * node_invoke which calls node_hook to determine whether a node hook exists.
     * It eventually calls _node_types_build which retrieves from the node_type
     * table. This table must not be updated when the install hooks are running.
     * Normally, node_invoke would call deadwood_insert. So we will do it
     * manually.
     */
    if ($install) {
      deadwood_insert($node);
    }
  }
  fclose($handle);
}

/**
 * Unload conversion categories from the database tables.
 */
function deadwood_unload_categories() {
  // TODO Should we instead query the node table for the nids of records with
  // type = 'deadwood_category' and call node_delete?

  // Delete any existing records.
  db_query("DELETE FROM {dw_item}");
  db_query("DELETE FROM {dw_category}");
  db_query("DELETE FROM {node_revisions} WHERE nid IN (SELECT nid FROM {node} WHERE type = 'deadwood_category')");
  db_query("DELETE FROM {node_comment_statistics} WHERE nid IN (SELECT nid FROM {node} WHERE type = 'deadwood_category')");
  db_query("DELETE FROM {node} WHERE type = 'deadwood_category'");
}
