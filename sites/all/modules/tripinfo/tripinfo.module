<?php
/* $Id$ */

/**
 * Todo list
 * 1. In filter, should be able to set size and other details. ESPECIALLY start location, (for load failure)
 * 3. Make it so they're not shown if in teaser mode (maybe)
 * 4. Clean up table - remove many things from it. Style it better
 */

/**
 * Valid permissions for this module
 * @return array An array of valid permissions for the module
 */

function tripinfo_menu() {


  /* TODO
   Non menu code that was placed in hook_menu under the '!$may_cache' block
   so that it could be run during initialization, should now be moved to hook_init.
   Previously we called hook_init twice, once early in the bootstrap process, second
   just after the bootstrap has finished. The first instance is now called boot
   instead of init.
    
   In Drupal 6, there are now two hooks that can be used by modules to execute code
   at the beginning of a page request. hook_boot() replaces hook_boot() in Drupal 5
   and runs on each page request, even for cached pages. hook_boot() now only runs
   for non-cached pages and thus can be used for code that was previously placed in
   hook_menu() with $may_cache = FALSE:
    
   Dynamic menu items under a '!$may_cache' block can often be simplified
   to remove references to arg(n) and use of '%<function-name>' to check
   conditions. See http://drupal.org/node/103114.
    
   The title and description arguments should not have strings wrapped in t(),
   because translation of these happen in a later stage in the menu system.
   */

  $items['tripinfo'] = array(
	'title' => 'Hobobiker Trip Details',
	'page callback' => 'tripinfo_list',
	'access arguments' => array('access content'),
	'type' => MENU_CALLBACK
  );

  $items['tripinfo_item'] = array(
	'page callback' => 'tripinfo_item',
	'access arguments' => array('access content'),  
	'type' => MENU_CALLBACK
  );

  $items['tripinfo_maponly'] = array(
	'page callback' => 'tripinfo_maponly',
	'access arguments' => array('access content'),  
	'type' => MENU_CALLBACK
  );

  $items['loadnode'] = array(
	'page callback' => 'tripinfo_loadnode',
	'access arguments' => array('access content'),  
	'type' => MENU_CALLBACK
  );
  $items['mappage'] = array(
	'page callback' => 'tripinfo_mappage',
	'access arguments' => array('access content'),  
	'type' => MENU_CALLBACK
  );

  return $items;
}


function validate_date($date) {
  list($y,$m, $d) = split('-', $date, 3);
  return sprintf("%04d-%02d-%02d", $y, $m, $d);

}

function tripinfo_list() {
  $startdate="2007-01-30";
  $enddate="2009-06-30";

  if ($_REQUEST['startdate']) {
    $startdate = validate_date($_GET['startdate']);
  }
  if ($_REQUEST['enddate']) {
    $enddate = validate_date($_GET['enddate']);
  }


  $tripinfo_path = drupal_get_path('module', 'tripinfo');

  $page_content .= '<div >';

  $page_content .= "<h4>$startdate to $enddate</h4>";

  $page_content .= t("<div>
		Here is detailed information about our trip. For each day's
		ride we have a map, gpx and kml files, and an elevation profile.<br/><br/>
		If you find that this isn't up-to-date or you want something that's
		not here, please send us an email and we'll try to get it for you.
		</div>");


  $page_content .= tripinfo_table($startdate, $enddate);
  $page_content .= "</div>";

  return $page_content;
}


function tripinfo_gmap($overlays) {

  drupal_set_html_head('<script src="http://maps.google.com/maps?file=api&v=2&hl=en&key='.variable_get('googlemap_api_key', '').'" type="text/javascript"></script>');
  drupal_add_js(drupal_get_path('module','tripinfo')."/tripinfo_filtermap.js");

  $output .= "<div style='height:500px;width:100%'><div class='mapholder' id='mapholder' style='width:100%;height:100%'>
	 <div class='filtermap' id='filtermap' style='width:100%;height:100%;border:2px solid black'></div>";
  foreach ($overlays as $overlay) {
    $output .= "<div class='geoxmlfile' style='display:none'>$overlay</div>";
    if (strlen($urllist)) {
      $urllist .= ",";
    }
    $urllist .= $overlay;
  }
  $kmlfile=$overlays[0];
  $urllist=drupal_urlencode($urllist);
  
  $output .= "You can ".
   l("explore this in a larger window","tripinfo_maponly", 
   array('query'=>"overlays=$urllist", 'attributes'=>array('id'=>'filtermap_largerlink', 'target'=>'_blank', 'class'=>$thickboxclass)));
  $output .= "or ". 
  l("Explore in Google Earth",$kmlfile) . "</div></div>";

  return $output;

}


function tripinfo_item() {
  $date = '2007-03-01';
  if ($_REQUEST['date']) {
    $date = validate_date($_GET['date']);
  }
  $startdate = $_REQUEST['startdate'];
  $enddate=$_REQUEST['enddate'];
  list($year,$month,$day) = split("-",$date);
  $unixtime=mktime(0,0,0,$month,$day,$year);

  $date .= "T00:00:00";
  $query="select body, field_date_value date, month(field_date_value) month,
	    day(field_date_value) day, year(field_date_value) year, field_start_value start,
		field_destination_value destination, field_miles_value miles, 
		field_elevation_gain_value ElevGain, field_camp_or_hotel_value
		from 
		content_type_triplog t, node_revisions r
		
		where r.nid = t.nid and r.vid = t.vid 
		and field_date_value = '$date'";


  $sth = db_query($query);
  if (! $sth) { die ("query: $query failed"); return -2; }

  $row = db_fetch_object($sth);

  //	$prevdate = db_fetch_object(db_query(
  //		'select left(field_date_value,10) date, field_start_value start,field_destination_value dest from content_type_triplog t
  //		   where t.field_date_value < "%s" order by field_date_value desc limit 1',
  //		   $date));
  //	$nextdate = db_fetch_object(db_query(
  //		'select left(field_date_value,10) date,field_start_value start,field_destination_value dest from content_type_triplog t
  //		   where t.field_date_value > "%s" order by field_date_value asc limit 1',
  //		   $date));

  $fulldate=sprintf("%04d%02d%02d",$row->year, $row->month,$row->day);
  $mysqldate=sprintf("%04d-%02d-%02d",$row->year, $row->month,$row->day);
  $mysqltomorrow=strftime("%Y-%m-%d",$unixtime+3600*24);

  $gpxfname="files/gps/$fulldate.gpx";
  $kmlfname="files/gps/$fulldate.kml";
  $profile_fname="files/gps/$fulldate.png";
  $kmlurl="http://www.hobobiker.com/$kmlfname";
  $rssurl="http://www.hobobiker.com/flickr_georss/?min_taken_date=$mysqldate&max_taken_date=$mysqltomorrow";




  $whentime = mktime(12,0,0,$row->month, $row->day, $row->year);
  $when = strftime("%B %d, %Y", $whentime);

  $page .= ($tripinfo_nav = theme_tripinfo_navigation($date,$startdate,$enddate));


  $page .= "<h3>$when: $row->start to $row->destination</h3>";

  if (file_exists($kmlfname)) {
    $page .= tripinfo_gmap(array($kmlurl,$rssurl));
  }


  $page .= "<div class=\"tripdesc\" style='border-top: 2px solid black;'><i>$row->body</i></div>";

  $page .= "<ul>";
  $km = round($row->miles/.62);
  $meters = round($row->ElevGain/3.24);
  $page .= "<li>$row->miles miles/$km kilometers</li>";
  $page .= "<li><a href='#profile'>Elevation Gain: $row->ElevGain feet/$meters meters</a></li>";
  $page .= "<li>Where we stayed: $row->field_camp_or_hotel_value</li>";
  if (file_exists($gpxfname)) {
    $page .= "<li><a href=\"/$gpxfname\">Download GPX file</a></li>";
  }
  if (file_exists($kmlfname)) {
    $page .= "<li><a href=\"/$kmlfname\">Download KML file</a></li>";
  }

  $page .= "</ul>";

  if (file_exists($profile_fname)) {
    $page .= "<hr /><a name='profile'><h4>Elevation Profile</h4></a>";
    $page .= "<img id='elevation_profile' src=\"/$profile_fname\">";

  }

  $page .= $tripinfo_nav;

  return $page;

}

function tripinfo_table($startdate, $enddate) {

  $query="select field_date_value date, month(field_date_value) month,
	    day(field_date_value) day, year(field_date_value) year, field_start_value start,
		field_destination_value destination, field_miles_value miles, 
		field_elevation_gain_value ElevGain, field_camp_or_hotel_value 'Where stayed'
		from content_type_triplog 
		where field_date_value >= '$startdate' and field_date_value <= '$enddate' 
		and field_miles_value <> 0 order by field_date_value asc";



  // $page .= "$query";

  $page .= "<table class='tripinfo_table_table'>\n";
  $page .= "<tr><th>Ride</th><th>date</th><th>miles/km</th>
		<th>Elev ft/mt</th></tr>\n";

  $sth = db_query($query);
  if (! $sth) { die ("query: $query failed"); return -2; }

  while ($row = db_fetch_object($sth)) {

    $fulldate=sprintf("%04d%02d%02d",$row->year, $row->month,$row->day);

    $date =  sprintf("%04d-%02d-%02d",$row->year, $row->month,$row->day);
    $location = $row->location;
    $miles = $row->miles;
    $elevgain = $row->ElevGain;
    $page .= "<tr>";

    $page .= "<th scope='row'>" . l("$row->start to $row->destination",
      "tripinfo_item", array('query'=>"date=$date&startdate=$startdate&enddate=$enddate")) . "</th>";
    $page .= "<td>$date</td>";

    $km = round($row->miles/.62);
    $elevgainmt = round($row->ElevGain/3.24);
    $page .= "<td>$row->miles/$km</td><td>$row->ElevGain/$elevgainmt</td>";
    $page .= "</tr>";
  }
  $page .= "</table>";

  return $page;


}


function tripinfo_filter($op, $delta=0, $format=-1, $text='') {
  switch($op) {
    case 'list':
      return array(0=>'Multiple-source Google Map (multisource)');
    case 'description':
      return t('Create a google map from multiple XML or GEOrss sources. Use "multisource:http:...,http://..."');
    case 'settings':
      break;
    case 'no cache':
      return false; // debugging only
    case 'prepare':
      return $text;
    case 'process':
      return tripinfo_filter_gmap($format,$text);
    default:
      return $text;
  }

}

function tripinfo_filter_gmap($format,$text) {
  $text = preg_replace_callback('/\[multisource:(.+?)\]/', 'tripinfo_gen_gmap', $text);

  return $text;
}

function tripinfo_gen_gmap($text) {

  $output .= <<<ENDOUTPUT

<?php
	drupal_set_html_head('<script src="http://maps.google.com/maps?file=api&v=2&hl=en&key='.variable_get('googlemap_api_key', '').'" type="text/javascript"></script>');
	drupal_add_js(drupal_get_path('module','tripinfo')."/tripinfo_filtermap.js");
?>
ENDOUTPUT;

  $overlays = split(",\w*",$text[1]);
  $output .= "<div class='mapholder' id='mapholder'><div class='filtermap' id='filtermap'></div>";
  foreach ($overlays as $overlay) {
    $output .= "<div class='geoxmlfile' style='display:none'>$overlay</div>";
    if (strlen($urllist)) { $urllist .= ","; }
    $urllist .= $overlay;
  }
  $urllist = drupal_urlencode($urllist);
  $output .= "You can " . l("explore this in a larger window","tripinfo_maponly",
    array('query'=>"overlays=$urllist", 'attributes'=>array('id'=>'filtermap_largerlink', 'target'=>'_blank')));
  $output .= " or ".l("explore in Google Earth",$overlays[0]) . "</div>";

  return $output;
}

function theme_tripinfo_navigation($date,$startdate,$enddate) {
  $output = '';
  $links = '';

  if ($date) {

    if ($prev = tripinfo_item_prev($date)) {
      // drupal_add_link(array('rel' => 'prev', 'href' => "tripinfo_item/?date=$prev->item&startdate=$startdate&enddate=$enddate"));
      $links .=       
        l('‹ ' . $prev->title, "tripinfo_item",  
        array( 'query'=>"date=$prev->item&startdate=$startdate&enddate=$enddate", 'attributes' => array('class' => 'page-previous', 'title' => t('Go to previous page'))));
      // TODO remove # , "date=$prev->item&startdate=$startdate&enddate=$enddate");
    }
    if ($startdate) {
      //drupal_add_link(array('rel' => 'up', 'href' => "tripinfo/?startdate=$startdate&enddate=$enddate"));
      $links .= 
        l(t('Up') , "tripinfo", array('query'=>"startdate=$startdate&enddate=$enddate", 'attributes'=>array('class' => 'page-up', 'title' => t('Go back to list'))));
      //TODO remove #,"startdate=$startdate&enddate=$enddate");
    }
    if ($next = tripinfo_item_next($date)) {
      //drupal_add_link(array('rel' => 'next', 'href' => "tripinfo_item/?date=$next->item&startdate=$startdate&enddate=$enddate"));
      $links .= 
      l($next->title . ' ›', "tripinfo_item", 
        array('query'=>"date=$next->item&startdate=$startdate&enddate=$enddate",  
        'attributes'=>array('class' => 'page-next', 'title' => t('Go to next page'))));
      // TODO remove #, "date=$next->item&startdate=$startdate&enddate=$enddate");
    }

    if (isset($links)) {
      $output = '<div class="book-navigation">';
      if (isset($tree)) {
        $output .= $tree;
      }
      if (isset($links)) {
        $output .= '<div class="page-links clear-block">'. $links .'</div>';
      }
      $output .= '</div>';
    }
  }

  return $output;
}

function tripinfo_item_prev($date) {
  $prevdate = db_fetch_object(db_query(
	'select left(field_date_value,10) item, field_start_value start,field_destination_value dest from content_type_triplog t
	   where t.field_date_value < "%s" order by field_date_value desc limit 1',
  $date));
  $prevdate->title="$prevdate->start to $prevdate->dest";
  return $prevdate;
}

function tripinfo_item_next($date) {
  $nextdate = db_fetch_object(db_query(
	'select left(field_date_value,10) item,field_start_value start,field_destination_value dest from content_type_triplog t
	   where t.field_date_value > "%s" order by field_date_value asc limit 1',
  $date));
  $nextdate->title="$nextdate->start to $nextdate->dest";
  return $nextdate;

}

function tripinfo_loadnode($nid) {
  if(arg(0) == 'loadnode' && is_numeric(arg(1))) $node = node_load(array('nid'=>arg(1)));
  global $user;
  $output  = node_view($node,false,true,false);
  //drupal_add_js(drupal_get_path('tripinfo') . "/tripinfo_map.js");
  print $output;
}

function tripinfo_maponly() {
  $overlaylist = urldecode($_REQUEST['overlays']);
  $overlays=split(',',$overlaylist);

  $content.="<div id='mapholder' style='height:500px'>
	 <div id='maponly_map' style='width:100%;height:100%'></div></div>";
  foreach ($overlays as $overlay) {
    if (strlen($overlay)) {
      $content .= "<div class='geoxmlfile' style='display:none;'>$overlay</div>";
    }
  }


  if(arg(0) == 'mappage' && is_numeric(arg(1))) $node = node_load(array('nid'=>arg(1)));

  drupal_set_html_head('<script src="http://maps.google.com/maps?file=api&v=2&hl=en&key='.variable_get('googlemap_api_key', '').'" type="text/javascript"></script>');
  drupal_add_js(drupal_get_path('module','tripinfo')."/tripinfo_maponly.js");


  $head.=drupal_get_html_head();
  $head.=drupal_get_css();
  $head.=drupal_get_js();

  $page =<<<ENDPAGE
	
	<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="$language" xml:lang="$language">

<head>
  <title></title>
  $head
</head>

<body>
  $content
</body>
</html>

ENDPAGE;

  print $page;

}
